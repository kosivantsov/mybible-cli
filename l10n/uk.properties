invalid_path = \nНе вдалося знайти теку з модулями MyBible: {modules_path}
empty_path = \nУ теці '{modules_path}' не знайдено жодного модуля MyBible
in_path = \nПовний шлях до теки з модулями MyBible:\n
no_module = \nУ теці '{modules_path}' модуль '{module_name}' не знайдено
exit_now = \nЗавершення роботи...
available_modules = \nНаявні модулі MyBible: {number}
invalid_reference = \nХибне посилання для цього модуля
no_verse_ouput = \nНе вдалося вивести {reference}:
error = Помилка!
folder_fail = Не вдалося відкрити теку: {error}
file_fail = Не вдалося відкрити {file}
file_created = Файл створено: {file}
help_description = Інструмент командного рядка для отримання текстів з модулів MyBible.
help_epilog = Параметри, що містить декілька частин, слід брати в лапки: {bold}mybible-cli -b "NIV'11" -r "1 Pet 1:1"{normal}
help_path = шлях до теки з модулями MyBible
help_list = виводить перелік наявних модулів MyBible
help_simplelist = виводить простий перелік наявних модулів MyBible
help_modulename = назва модуля MyBible, з якого потрібно вивести текст
help_reference = біблійне посилання, текст якого потрібно вивести
help_abbr = зчитує повні та скорочені назви біблійних книг з нетипового файлу. Якщо вказати {bold}{italics}--abbr uk{normal}, то буде зчитано файл '{bold}{italics}uk_mapping.json{normal}', розташований у теці конфігурації програми
help_selfabbr = зчитує повні та скорочені назви біблійних книг з указаного модуля
help_format = форматує вивід за допомогою %%-скорочень рядка формату. Доступні скорочення: f, a, c, v, t, T, z, A, Z, m
help_saveformat = вказаний рядок формату буде застосовано та збережено як типовий
help_helpformat = детальна інформація про рядок формату
help_noansi = видаляє екрановані послідовності ANSI у виведених віршах Біблії (якщо було використано %%A або %%Z)
help_open_config = відкриває теку конфігурації
help_open_module = відкриває теку з модулями MyBible
help_j2t = конвертує файл json у tsv (для редагування файлу для пошуку назв книг)
help_checktsv = показує повтори у вказаному файлі tsv
help_t2j = конвертує файл tsv у json (для використання нетипового файлу для пошуку назв книг)
help_gui = виводить текст у графічному вікні
help_helpformat_message = \nДоступні скорочення для рядка формату:\n
    \t  %f \t повна назва книгиn
    \t  %a \t скорочена назва книгиn
    \t  %b \t номер книги відповідно до специфікацій формату MyBiblen
    \t  %c \t номер розділуn
    \t  %v \t номер віршаn
    \t  %T \t необроблений текст вірша з модуляn
    \t  %t \t текст вірша без маркерів; примітки та розриви рядків збереженоn
    \t  %z \t так само, як з попереднім, але без приміток та розривів рядківn
    \t  %A \t text of the verse with color output for console; Strong' numbers are includedn
    \t  %z \t так само, як з попереднім, але без номерів Стронгаn
    \t  %m \t назва модуля\n
    Поточний типовий формат: {bold}{format_string}{normal}\n
    Для збереження іншого формату як типового його потрібно вказати після аргумента {bold}-F{normal}\n
    Рядок формату може містити {bold}\\t{normal} та {bold}\\n{normal}\n
    Each verse in the output is printed on a new line and is formatted individually''
parser_error = Запускайте програму з аргументами -b/--module_name та -r/--reference, або з одним із наведених нижче: -L/--list-modules, --simple-list, --helpformat, --open-config-folder, --open-module-folder, --j2t/--json-to-tsv, --check-tsv, --t2j/--tsv-to-json
file_exists_prompt = Файл '{file}' уже існує. Бажаєте його перезаписати? Yes (так) / No — (ні): 
yes_no_prompt = Вкажіть 'yes' (так) або 'no' (ні)
repeated_in_line = Повтори в рядку {row}: {repeated_string}
repeated_in_file = Повтори тексту {element} в рядках {rows}
gui_title = Біблійний текст
gui_copy = Скопіювати показаний текст
gui_format_verses = Формат віршів
gui_save = Зберегти