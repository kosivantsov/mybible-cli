invalid_path = \nCannot find the folder with MyBible modules: {modules_path}
empty_path = \nNo MyBible modules found found in {modules_path}
in_path = \nFull path to the folder with MyBible modules:\n
no_module = \nNo module named '{module_name}' found in '{modules_path}'
exit_now = \nExiting now...
available_modules = \nAvailable MyBible modules: {number}
invalid_reference = \nInvalid reference for this module
no_verse_ouput = \nCannon output {bold}{reference}{normal}:
error = Error!
folder_fail = Failed to open the folder: {error}
file_fail = Failed to open {file}
file_created = File created: {file}
help_description = Command line tool to query MyBible modules.
help_epilog = Parameter containing several tokens should be quoted: {bold}mybible-cli -b "NIV'11" -r "1 Pet 1:1"{normal}
help_path = path to the folder with MyBible module
help_list = lists available MyBilbe modules
help_modulename = name of the MyBible module to use
help_reference = Bible reference to output
help_abbr = reads Bible book names and abbreviations from a non-default file. With {bold}{italics}--abbr uk{normal} a file named {bold}{italics}uk_mapping.json{normal} located in the configuration folder will be used
help_selfabbr = reads Bible book names and abbreviations from the module itself
help_format = formats output with %%-prefixed format string. Available placeholders: f, a, c, v, t, T, z, A, Z, m
help_saveformat = specified format string will be applied and saved as default
help_helpformat = detailed info on the format string
help_noansi = clears out any ANSI escape sequences in the Bible verses output (if %%A or %%Z were used)
help_open_config = opens the config folder
help_open_module = opens the folder with MyBible modules
help_j2t = converts a json file to tsv (to edit a mapping file)
help_checktsv = reports duplicates in the specified tsv file
help_t2j = converts a tsv file to json (to use as a mapping file)
parser_error = Run with the arguments -b/--module_name and -r/--reference, or use one of the following: -L/--list-modules, --helpformat, --open-config-folder, --open-module-folder, --j2t/--json-to-tsv, --check-tsv, --t2j/--tsv-to-json
file_exists_prompt = The file '{file}' already exists. Do you want to overwrite it? (yes/no): 
yes_no_prompt = Please enter 'yes' or 'no'
repeated_in_line = Repetitions in row {row}: {repeated_string}
repeated_in_file = Repetitions of {element} in rows {rows}
help_helpformat_message = \nAvailable placeholders for the format string:\n \
    \t  %f \t full book name\n \
    \t  %a \t abbreviated book name\n \
    \t  %b \t book number as per MyBible format specifications\n \
    \t  %c \t chapter number\n \
    \t  %v \t verse number\n \
    \t  %T \t raw text of the verse from the module\n \
    \t  %t \t text of the verse without markers; notes and line breaks are kept\n \
    \t  %z \t the same as above, but without notes and line breaks\n \
    \t  %A \t text of the verse with color output for console; Strong's numbers are included\n \
    \t  %Z \t the same as above, but without Strong's numbers\n \
    \t  %m \t module name\n \
    Current default format is {bold}{format_string}{normal}\n \
    To save a new default, provide the format with {bold}-F{normal}\n \
    Format string may contain {bold}\\t{normal} and {bold}\\n{normal}\n \
    Each verse in the output is printed on a new line and is formatted individually
